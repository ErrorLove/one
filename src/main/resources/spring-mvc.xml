<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 告诉spring注册几个默认的bean，用来处理@requestmapping及处理请求的适配器-->
    <mvc:annotation-driven/>

    <!--定时器-->
    <task:annotation-driven/>
    <!--<context:annotation-config/>-->
    <!--<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>-->
    <!--<context:component-scan base-package="cn.com.one.controller"/>-->

    <!-- 静态资源路径映射物理地址 -->
    <mvc:resources mapping="/img/**" location="/img/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/html/**" location="/html/" />
    <mvc:resources mapping="/fonts/**" location="/fonts/"/>
    <mvc:resources mapping="*.html" location="/"/>
    <mvc:resources mapping="*.ico" location="/"/>

    <!-- 路径映射至view资源名-->
    <mvc:view-controller path="/i18n" view-name="i18n"/>

    <mvc:interceptors>
        <!--非accept-language,手动设置,国际化拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="cn.mrerror.one.interceptor.I18NHandlerInterceptor"/>
        </mvc:interceptor>
        <!--防止重复提交令牌-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="cn.mrerror.one.interceptor.TokenInterceptor"/>
        </mvc:interceptor>
        <!--用户拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/user/**"/>
            <bean class="cn.mrerror.one.interceptor.UserInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 国际化 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="one"/>
    </bean>

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 (注册@Component，@Controller，@Service，@Repository等注解标记的组件)-->
    <context:component-scan base-package="cn.mrerror.one">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:include-filter type="annotation" expression="org.springframework.web.socket.config.annotation.EnableWebSocket"/>
        <context:include-filter type="annotation" expression="org.springframework.web.servlet.config.annotation.EnableWebMvc"/>
        <context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
        <context:include-filter type="annotation" expression="org.springframework.context.annotation.Bean"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/> <!-- JSON转换器 -->

                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>text/plain;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>

                <bean id="xmlConverter" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/xml;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>

            </list>
        </property>
    </bean>

    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>  <!-- /WEB-INF/jsp/ -->
        <property name="suffix" value=".jsp"/>
        <property name="order" value="2"/>
    </bean>

    <!-- FreeMarker模板路径 -->
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/templates/ftl/"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
        <property name="defaultEncoding" value="utf-8"/>
    </bean>
    <!-- 配置freeMarker视图解析器 -->
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="suffix" value=".ftl"/>
        <property name="order" value="0"/><!-- 指定解析器的顺序 -->
    </bean>

    <!-- velocity 模板引擎 -->
    <bean id="velocityConfig"
          class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/templates/vm/"/>
        <property name="configLocation" value="classpath:velocity.properties"/>
    </bean>

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="false"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".vm"/>
        <property name="contentType" value="text/html;charset=utf-8"/>
        <property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml"/>
        <!--是否使用spring对宏定义的支持-->
        <property name="exposeSpringMacroHelpers" value="true"/>
        <!-- 将请求或会话的属性复制到模型Map中 -->
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="allowSessionOverride" value="true"/>
        <property name="allowRequestOverride" value="true"/>
        <property name="order" value="1"/><!-- 指定解析器的顺序 -->
    </bean>

    <!-- thymeleaf -->
    <bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/html/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
        <property name="cacheable" value="false" />
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
    </bean>

    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding"  value="UTF-8" />
        <property name="order" value="3"/><!-- 指定解析器的顺序 -->
    </bean>


    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

</beans>